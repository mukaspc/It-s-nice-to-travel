name: Pull Request Validation

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci
        env:
          NODE_ENV: development

      - name: Run linter
        run: npm run lint
        env:
          NODE_ENV: development

  test:
    name: Unit Tests with Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci
        env:
          NODE_ENV: development

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          NODE_ENV: test

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 7

  status-comment:
    name: Status Comment
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: always()

    steps:
      - name: Create status comment
        uses: actions/github-script@v7
        env:
          LINT_RESULT: ${{ needs.lint.result }}
          TEST_RESULT: ${{ needs.test.result }}
        with:
          script: |
            const lintResult = process.env.LINT_RESULT;
            const testResult = process.env.TEST_RESULT;

            const lintIcon = lintResult === 'success' ? '‚úÖ' : '‚ùå';
            const testIcon = testResult === 'success' ? '‚úÖ' : '‚ùå';

            const overallStatus = (lintResult === 'success' && testResult === 'success') ? '‚úÖ SUCCESS' : '‚ùå FAILED';

            const body = `## üîç Pull Request Validation Results

            | Check | Status | Result |
            |-------|--------|--------|
            | Linting | ${lintIcon} | \`${lintResult}\` |
            | Unit Tests | ${testIcon} | \`${testResult}\` |

            **Overall Status: ${overallStatus}**

            ${lintResult !== 'success' || testResult !== 'success' ? 
              '‚ö†Ô∏è Please fix the failing checks before merging this PR.' : 
              'üéâ All checks passed! This PR is ready for review.'
            }

            ---
            *Generated by GitHub Actions workflow*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
